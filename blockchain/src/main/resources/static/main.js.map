{"version":3,"sources":["webpack:///./src/app/app.component.html","webpack:///./src/app/block-modal/block-modal.component.html","webpack:///./src/app/fetch-data/fetch-data.component.html","webpack:///./src/app/home/home.component.html","webpack:///./src/app/nav-menu/nav-menu.component.html","webpack:///./src/app/subscribe/subscribe.component.html","webpack:///./src/app/trasaction-modal/trasaction-modal.component.html","webpack:///./src/app/wallet/wallet.component.html","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/Model/User.ts","webpack:///./src/app/Model/transactionViewModel.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/block-modal/block-modal.component.css","webpack:///./src/app/block-modal/block-modal.component.ts","webpack:///./src/app/fetch-data/fetch-data.component.ts","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/nav-menu/nav-menu.component.css","webpack:///./src/app/nav-menu/nav-menu.component.ts","webpack:///./src/app/services/BlockService.ts","webpack:///./src/app/services/NodeService.ts","webpack:///./src/app/services/TransactionService.ts","webpack:///./src/app/services/WalletService.ts","webpack:///./src/app/services/authentication.service.ts","webpack:///./src/app/socialloginConfig.ts","webpack:///./src/app/subscribe/subscribe.component.css","webpack:///./src/app/subscribe/subscribe.component.ts","webpack:///./src/app/trasaction-modal/trasaction-modal.component.css","webpack:///./src/app/trasaction-modal/trasaction-modal.component.ts","webpack:///./src/app/wallet/wallet.component.css","webpack:///./src/app/wallet/wallet.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["module.exports = \"<body>\\r\\n  <app-nav-menu style=\\\"padding:0px 0px 0px 0px\\\"></app-nav-menu>\\r\\n  <div class=\\\"container col-lg-12\\\" style=\\\"padding:0px 0px 0px 0px\\\">\\r\\n    <router-outlet></router-outlet>\\r\\n  </div>\\r\\n</body>\\r\\n\"","module.exports = \"<p>\\n  block-modal works!\\n</p>\\n\"","module.exports = \"<h1>Weather forecast</h1>\\r\\n\\r\\n<p>This component demonstrates fetching data from the server.</p>\\r\\n\\r\\n<p *ngIf=\\\"!forecasts\\\"><em>Loading...</em></p>\\r\\n\\r\\n<table class='table table-striped' *ngIf=\\\"forecasts\\\">\\r\\n  <thead>\\r\\n    <tr>\\r\\n      <th>Date</th>\\r\\n      <th>Temp. (C)</th>\\r\\n      <th>Temp. (F)</th>\\r\\n      <th>Summary</th>\\r\\n    </tr>\\r\\n  </thead>\\r\\n  <tbody>\\r\\n    <tr *ngFor=\\\"let forecast of forecasts\\\">\\r\\n      <td>{{ forecast.dateFormatted }}</td>\\r\\n      <td>{{ forecast.temperatureC }}</td>\\r\\n      <td>{{ forecast.temperatureF }}</td>\\r\\n      <td>{{ forecast.summary }}</td>\\r\\n    </tr>\\r\\n  </tbody>\\r\\n</table>\\r\\n\"","module.exports = \"\\r\\n<div class=\\\"col-lg-12\\\" style=\\\"padding:0px\\\">\\r\\n  <div class=\\\"row col-lg-12 mb-4\\\">\\r\\n    <div class=\\\"col-lg-2\\\"></div>\\r\\n    <div class=\\\"col-lg-8 text-center border-bottom\\\">\\r\\n      <h1 class=\\\"text-info\\\" style=\\\"font-weight: 800; font-size:2em; height:40px; line-height:15px\\\">SUPCOIN</h1>\\r\\n    </div>\\r\\n    <div class=\\\"col-lg-2\\\"></div>\\r\\n  </div>\\r\\n  <div class=\\\"row col-lg-12 mb-4 \\\">\\r\\n    <div class=\\\"col-lg-2 \\\"></div>\\r\\n    <div class=\\\"col-md-2 mb-1 text-center\\\">\\r\\n      <div class=\\\"card shadow p-3  bg-white rounded\\\" style=\\\"width: 18rem;\\\">\\r\\n        <div class=\\\"card-body text-center\\\" style=\\\"padding:15px;\\\">\\r\\n          <h5 class=\\\"card-title\\\">Blocs</h5>\\r\\n          <h5 class=\\\"card-title\\\">{{totalBlocks}}</h5>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-2 mb-1 text-center\\\">\\r\\n      <div class=\\\"card shadow p-3  bg-white rounded\\\" style=\\\"width: 18rem;\\\">\\r\\n        <div class=\\\"card-body text-center\\\" style=\\\"padding:15px;\\\">\\r\\n          <h5 class=\\\"card-title\\\">Transactions</h5>\\r\\n          <h5 class=\\\"card-title\\\">{{totalTransaction}}</h5>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-2 mb-1 text-center\\\">\\r\\n      <div class=\\\"card shadow p-3  bg-white rounded\\\" style=\\\"width: 18rem;\\\">\\r\\n        <div class=\\\"card-body text-center\\\" style=\\\"padding:15px;\\\">\\r\\n          <h5 class=\\\"card-title\\\">Transactions minées</h5>\\r\\n          <h5 class=\\\"card-title\\\">{{totalTransactionMined}}</h5>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-2 mb-1 text-center\\\">\\r\\n      <div class=\\\"card shadow p-3  bg-white rounded\\\" style=\\\"width: 18rem; padding:0px\\\">\\r\\n        <div class=\\\"card-body text-center\\\" style=\\\"padding:15px;\\\">\\r\\n          <h5 class=\\\"card-title\\\">Transactions non minées</h5>\\r\\n          <h5 class=\\\"card-title\\\">{{totalTransactionUnMined}}</h5>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row col-lg-12 mb-4 \\\">\\r\\n    <div class=\\\"col-lg-4 \\\"></div>\\r\\n    <div class=\\\"col-sm-2 mb-1 text-center\\\">\\r\\n      <div class=\\\"card shadow p-3 bg-white rounded\\\" style=\\\"width: 18rem;\\\">\\r\\n        <div class=\\\"card-body text-center\\\"  style=\\\"padding:15px;\\\">\\r\\n          <h5 class=\\\"card-title\\\">Utilisateurs</h5>\\r\\n          <h5 class=\\\"card-title\\\">{{totalUsers}}</h5>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-2 mb-1 text-center\\\">\\r\\n      <div class=\\\"card shadow p-3 bg-white rounded\\\" style=\\\"width: 18rem;\\\">\\r\\n        <div class=\\\"card-body text-center\\\"  style=\\\"padding:15px;\\\">\\r\\n          <h5 class=\\\"card-title\\\">Valeur</h5>\\r\\n          <h5 class=\\\"card-title\\\">20 000 Eur</h5>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-lg-4 \\\"></div>\\r\\n  </div>  \\r\\n  <div class=\\\"row col-lg-12\\\" style=\\\"background-color:white; width:100%; padding:0px; margin:0px\\\">\\r\\n    <div class=\\\"col-lg-2\\\" style=\\\"padding:0px\\\"></div>\\r\\n    <div class=\\\"col-lg-8\\\">\\r\\n      <div class=\\\"row col-lg-12 rounded-top\\\" style=\\\"margin-left:10px;min-width:619px; background-color:#00285c; padding:0px; margin:0px;\\\">\\r\\n        <div class=\\\"btn-group btn-group-toggle\\\" style=\\\"margin:5px;background-color:#00285c; width:auto\\\" data-toggle=\\\"buttons\\\">\\r\\n          <label>\\r\\n            <button class=\\\"btn btn-info active\\\" (click)=\\\"getTransactions()\\\" autocomplete=\\\"off\\\"> Transactions </button>\\r\\n          </label>\\r\\n          <label>\\r\\n            <button class=\\\"btn btn-info active\\\" (click)=\\\"getBlocks()\\\" autocomplete=\\\"off\\\"> Blocs </button>\\r\\n          </label>\\r\\n          <label>\\r\\n            <button class=\\\"btn btn-info active\\\" (click)=\\\"getNodes()\\\" autocomplete=\\\"off\\\"> Noeuds </button>\\r\\n          </label>\\r\\n          <label>\\r\\n            <button class=\\\"btn btn-info active\\\" (click)=\\\"getWallets()\\\" autocomplete=\\\"off\\\"> Wallets </button>\\r\\n          </label>\\r\\n        </div>\\r\\n      </div>\\r\\n      <table *ngIf=\\\"showTransaction == true\\\" id=\\\"table\\\" class=\\\"table table-striped  table-sm col-lg-12 shadow-lg\\\" style=\\\"margin-top:0px; border-radius: 5px 5px;\\\">\\r\\n        <thead style=\\\"background-color:#00285c; border-top-left-radius: 40px 40px;\\\">\\r\\n          <tr>\\r\\n            <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"border-top: 0px;color:white; padding-bottom:0px; max-width:3em;\\\">Id</th>\\r\\n            <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"border-top: 0px;color:white; padding-bottom:0px\\\">Minée</th>\\r\\n            <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"border-top: 0px;color:white; padding-bottom:0px\\\">Message</th>\\r\\n            <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"border-top: 0px;color:white; padding-bottom:0px\\\">Id receveur</th>\\r\\n            <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"border-top: 0px;color:white; padding-bottom:0px\\\">Id lanceur</th>\\r\\n            <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"border-top: 0px;color:white; padding-bottom:0px\\\">Timestamp</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let t of tableInfo | paginate: { itemsPerPage: 10, currentPage: p }\\\">\\r\\n            <th class=\\\"text-center\\\" scope=\\\"row\\\">{{t.id}}</th>\\r\\n            <td class=\\\"text-center\\\">{{t.mined}}</td>\\r\\n            <td class=\\\"text-center\\\">{{t.message.substring(0,40)}}...</td>\\r\\n            <td class=\\\"text-center\\\">{{t.receiverId}}</td>\\r\\n            <td class=\\\"text-center\\\">{{t.senderId}}</td>\\r\\n            <td class=\\\"text-center\\\">{{t.timestamp}}</td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n        <tfoot>\\r\\n          <ul class=\\\"pagination col-lg-12\\\">\\r\\n            <pagination-controls (pageChange)=\\\"p = $event\\\"></pagination-controls>\\r\\n          </ul>\\r\\n        </tfoot>\\r\\n      </table>\\r\\n\\r\\n      <table *ngIf=\\\"showBlock == true\\\" id=\\\"table\\\" class=\\\"table table-striped  table-sm col-lg-12 shadow-lg\\\" style=\\\"margin-top:0px; border-radius: 5px 5px;\\\">\\r\\n        <thead style=\\\"background-color:#00285c; border-top-left-radius: 40px 40px;\\\">\\r\\n          <tr>\\r\\n            <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"border-top: 0px;color:white; padding-bottom:0px\\\">Id</th>\\r\\n            <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"border-top: 0px;color:white; padding-bottom:0px\\\">Hash précédent</th>\\r\\n            <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"border-top: 0px;color:white; padding-bottom:0px\\\">Hash</th>\\r\\n            <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"border-top: 0px;color:white; padding-bottom:0px\\\">Nonce</th>\\r\\n            <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"border-top: 0px;color:white; padding-bottom:0px\\\">total transactions</th>\\r\\n            <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"border-top: 0px;color:white; padding-bottom:0px\\\">Timestamp</th>\\r\\n            <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"border-top: 0px;color:white; padding-bottom:0px\\\">Action</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let t of tableInfo | paginate: { itemsPerPage: 10, currentPage: p }\\\">\\r\\n            <th class=\\\"text-center\\\" scope=\\\"row\\\">{{t.id}}</th>\\r\\n            <td class=\\\"text-center\\\">{{t.prevHash.substring(0,20)}}...</td>\\r\\n            <td class=\\\"text-center\\\">{{t.hash.substring(0,20)}}...</td>\\r\\n            <td class=\\\"text-center\\\">{{t.nonce}}</td>\\r\\n            <td class=\\\"text-center\\\">{{t.transactionsCount}}</td>\\r\\n            <td class=\\\"text-center\\\">{{t.timestamp}}</td>\\r\\n            <td class=\\\"text-center\\\"><button class=\\\"btn btn-info\\\" (click)=\\\"blockDetail(t.id)\\\">Lire</button></td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n        <tfoot>\\r\\n          <ul class=\\\"pagination col-lg-12\\\">\\r\\n            <pagination-controls (pageChange)=\\\"p = $event\\\"></pagination-controls>\\r\\n          </ul>\\r\\n        </tfoot>\\r\\n        \\r\\n      </table>\\r\\n\\r\\n      <table *ngIf=\\\"showNode == true\\\" id=\\\"table\\\" class=\\\"table table-striped  table-sm col-lg-12 shadow-lg\\\" style=\\\"margin-top:0px; border-radius: 5px 5px;\\\">\\r\\n        <thead style=\\\"background-color:#00285c; border-top-left-radius: 40px 40px;\\\">\\r\\n          <tr>\\r\\n            <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"border-top: 0px;color:white; padding-bottom:0px\\\">Adresse</th>\\r\\n            <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"border-top: 0px;color:white; padding-bottom:0px\\\">Port</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let t of tableInfo | paginate: { itemsPerPage: 10, currentPage: p }\\\">\\r\\n            <th class=\\\"text-center\\\" scope=\\\"row\\\">{{t.host}}</th>\\r\\n            <td class=\\\"text-center\\\">{{t.port}}</td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n        <tfoot>\\r\\n          <ul class=\\\"pagination col-lg-12\\\">\\r\\n            <pagination-controls (pageChange)=\\\"p = $event\\\"></pagination-controls>\\r\\n          </ul>\\r\\n        </tfoot>\\r\\n      </table>\\r\\n\\r\\n      <table *ngIf=\\\"showWallet == true\\\" id=\\\"table\\\" class=\\\"table table-striped  table-sm col-lg-12 shadow-lg\\\" style=\\\"margin-top:0px; border-radius: 5px 5px;\\\">\\r\\n        <thead style=\\\"background-color:#00285c; border-top-left-radius: 40px 40px;\\\">\\r\\n          <tr>\\r\\n            <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"border-top: 0px;color:white; padding-bottom:0px\\\">Id</th>\\r\\n            <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"border-top: 0px;color:white; padding-bottom:0px\\\">Nom</th>\\r\\n            <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"border-top: 0px;color:white; padding-bottom:0px\\\">mail</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let w of tableInfo | paginate: { itemsPerPage: 10, currentPage: p }\\\">\\r\\n            <th class=\\\"text-center\\\">{{w.id}}</th>\\r\\n            <td class=\\\"text-center\\\">{{w.name}}</td>\\r\\n            <th class=\\\"text-center\\\">{{w.mail}}</th>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n        <tfoot>\\r\\n          <ul class=\\\"pagination col-lg-12\\\">\\r\\n            <pagination-controls (pageChange)=\\\"p = $event\\\"></pagination-controls>\\r\\n          </ul>\\r\\n        </tfoot>\\r\\n      </table>\\r\\n    </div>\\r\\n    <div class=\\\"col-lg-2\\\"></div>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\"","module.exports = \"<header>\\r\\n  <link rel=\\\"stylesheet\\\" href=\\\"https://use.fontawesome.com/releases/v5.8.2/css/all.css\\\" integrity=\\\"sha384-oS3vJWv+0UjzBfQzYUhtDYW+Pj2yciDJxpsK1OYPAYjqT085Qq/1cq5FLXAZQ7Ay\\\" crossorigin=\\\"anonymous\\\">\\r\\n  <nav class='navbar navbar-expand-sm navbar-toggleable-sm  box-shadow  ' style=\\\"background-color:#00285c; padding:0px 0px 0px -10px\\\">\\r\\n    <div class=\\\"container\\\">\\r\\n      <div class=\\\"row col-lg-12\\\">\\r\\n        <a class=\\\"navbar-brand text-light\\\" (click)=\\\"home()\\\" style=\\\"font-weight: 800; font-size:2em; height:40px;margin-right:5px; line-height:15px\\\">SUPBANK</a>\\r\\n        <!--<span class=\\\"fab fa-bitcoin fa-2x text-light\\\" id=\\\"basic-addon1\\\"></span>-->\\r\\n        <img src=\\\"../../assets/facebook_profile_image.png\\\" class=\\\"rounded \\\" style=\\\"width: 2em;height: 2em; \\\" />\\r\\n        <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\".navbar-collapse\\\" aria-label=\\\"Toggle navigation\\\"\\r\\n                [attr.aria-expanded]=\\\"isExpanded\\\" (click)=\\\"toggle()\\\">\\r\\n          <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n        </button>\\r\\n        <div class=\\\"navbar-collapse collapse d-sm-inline-flex flex-sm-row-reverse mb-3\\\" [ngClass]='{\\\"show\\\": isExpanded}'>\\r\\n          <ul *ngIf=\\\"isLogged == false\\\" class=\\\"navbar-nav flex-grow\\\">\\r\\n            <li class=\\\"nav-item\\\" [routerLinkActive]='[\\\"link-active\\\"]' style=\\\"margin-right:1em;\\\" [routerLinkActiveOptions]='{ exact: true }'>\\r\\n              <button type=\\\"button\\\" class=\\\"btn btn-info\\\" data-toggle=\\\"modal\\\" data-target=\\\"#LoginModal\\\">\\r\\n                Connexion\\r\\n              </button>\\r\\n            </li>\\r\\n            <li *ngIf=\\\"showSearchBar == true\\\" class=\\\"nav-item\\\" [routerLinkActive]='[\\\"link-active\\\"]'>\\r\\n              <button type=\\\"button\\\" class=\\\"btn  btn-info\\\" data-toggle=\\\"modal\\\" data-target=\\\"#RegisterModal\\\">S'inscrire</button>\\r\\n            </li>\\r\\n          </ul>\\r\\n          <ul *ngIf=\\\"isLogged == true\\\" class=\\\"navbar-nav flex-grow\\\">\\r\\n            <li class=\\\"nav-item\\\" [routerLinkActive]='[\\\"link-active\\\"]' style=\\\"margin-right:1em;\\\" [routerLinkActiveOptions]='{ exact: true }'>\\r\\n              <button type=\\\"button\\\" class=\\\"btn btn-info\\\" [routerLink]=\\\"['/wallet']\\\">\\r\\n                Portefeuille  <span class=\\\"fas fa-wallet  text-light\\\" id=\\\"basic-addon1\\\"></span>\\r\\n              </button>\\r\\n            </li>\\r\\n            <li class=\\\"nav-item\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"btn  btn-danger\\\" (click)=\\\"logOut()\\\" title=\\\"Déconnexion\\\"><span class=\\\"far fa-times-circle\\\" style=\\\"color:white\\\"></span></button>\\r\\n            </li>\\r\\n          </ul>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </nav>\\r\\n  <div  class=\\\"row shadow-lg col mb-5\\\" style=\\\"background-color:#00285c; padding:0px 0px 0px 0px; margin-right:0px; margin-left:0px\\\">\\r\\n    <div class=\\\"col-lg-12\\\">\\r\\n      <div class=\\\"row mb-3\\\">\\r\\n        <div class=\\\"text-center col-lg-12\\\">\\r\\n          <span class=\\\"h1 text-light\\\" style=\\\"font-weight: 600; font-family: Montserrat, sans-serif;\\\">Explorateur de blocs</span>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row text-center\\\">\\r\\n        <div class=\\\"col-lg-4\\\"></div>\\r\\n        <div class=\\\"input-group mb-3 col-lg-4\\\">\\r\\n          <div class=\\\"input-group-prepend \\\" style=\\\" background-color:white; border-radius:2px; padding: 2px 2px 2px 2px\\\">\\r\\n            <span class=\\\"fas fa-search-dollar fa-2x\\\" id=\\\"basic-addon1\\\" (click)=\\\"search(searchText)\\\" style=\\\"color:#1a3c69 \\\"></span>\\r\\n          </div>\\r\\n          <input class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"search\\\" [(ngModel)]=\\\"searchText\\\" autocomplete=\\\"off\\\">\\r\\n        </div>\\r\\n        <div class=\\\"col-lg-4\\\"></div>\\r\\n      </div>\\r\\n      <div class=\\\"row text-center\\\">\\r\\n        <div class=\\\" col-lg-12 text-center\\\">\\r\\n          <p class=\\\"text-light\\\">Vous pouver rechercher des transactions en fonction de l'adresse d'un wallet (Id ou Nom), des noeuds ou de l'identifiant d'un bloc</p>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n  <div *ngIf=\\\"showSearchResult == true\\\" class=\\\"row col-lg-12\\\" style=\\\"background-color:white; width:100%; padding:0px; margin:0px\\\">\\r\\n    <div class=\\\"col-lg-2\\\" style=\\\"padding:0px\\\"></div>\\r\\n    <table id=\\\"table\\\" class=\\\"table table-striped  table-sm col-lg-8 shadow-lg\\\" style=\\\"margin-top:0px; border-radius: 5px 5px;\\\">\\r\\n      <thead style=\\\"background-color:#00285c; border-top-left-radius: 40px 40px;\\\">\\r\\n      <tr>\\r\\n        <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"border-top: 0px;color:white; padding-bottom:0px; max-width:3em;\\\">Id</th>\\r\\n        <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"border-top: 0px;color:white; padding-bottom:0px\\\">Minée</th>\\r\\n        <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"border-top: 0px;color:white; padding-bottom:0px\\\">Message</th>\\r\\n        <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"border-top: 0px;color:white; padding-bottom:0px\\\">Id receveur</th>\\r\\n        <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"border-top: 0px;color:white; padding-bottom:0px\\\">Id lanceur</th>\\r\\n        <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"border-top: 0px;color:white; padding-bottom:0px\\\">Timestamp</th>\\r\\n      </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n      <tr *ngFor=\\\"let t of tableInfo | paginate: { itemsPerPage: 10, currentPage: p }\\\">\\r\\n        <th class=\\\"text-center\\\" scope=\\\"row\\\">{{t.id}}</th>\\r\\n        <td class=\\\"text-center\\\">{{t.mined}}</td>\\r\\n        <td class=\\\"text-center\\\">{{t.message.substring(0,40)}}...</td>\\r\\n        <td class=\\\"text-center\\\">{{t.receiverId}}</td>\\r\\n        <td class=\\\"text-center\\\">{{t.senderId}}</td>\\r\\n        <td class=\\\"text-center\\\">{{t.timestamp}}</td>\\r\\n      </tr>\\r\\n      </tbody>\\r\\n      <ul class=\\\"pagination\\\">\\r\\n        <pagination-controls (pageChange)=\\\"p = $event\\\"></pagination-controls>\\r\\n      </ul>\\r\\n    </table>\\r\\n    <div class=\\\"col-lg-2\\\"></div>\\r\\n  </div>\\r\\n  <div class=\\\"modal fade in show \\\" id=\\\"LoginModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalLabel\\\">\\r\\n    <div class=\\\"modal-dialog \\\" role=\\\"document\\\">\\r\\n      <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"card shadow-lg\\\">\\r\\n\\r\\n          <h5 class=\\\"card-header white-text text-center py-4\\\" style=\\\"background-color:#f0f0f1\\\">\\r\\n            <strong>Connexion</strong>\\r\\n          </h5>\\r\\n\\r\\n          <!--Card content-->\\r\\n          <div class=\\\"card-body px-lg-5 pt-0\\\" style=\\\"margin-top:20px;\\\">\\r\\n\\r\\n            <!-- Form -->\\r\\n            <form class=\\\"text-center\\\" [formGroup]=\\\"contactForm\\\" (ngSubmit)=\\\" logIn()\\\" style=\\\"color: #757575;\\\">\\r\\n\\r\\n              Merci de rentrer votre addresse mail si vous l'avez renseignez lors de votre inscription, sinon le nom de votre wallet.\\r\\n\\r\\n              <!-- Email -->\\r\\n              <input type=\\\"email\\\" formControlName=\\\"email\\\" id=\\\"materialLoginFormEmail\\\" placeholder=\\\"Mail\\\" class=\\\"form-control\\\"  required>\\r\\n\\r\\n              <p>ou</p>\\r\\n              <!-- Password -->\\r\\n              <input type=\\\"text\\\"formControlName=\\\"name\\\" id=\\\"materialLoginFormPassword\\\" placeholder=\\\"Nom\\\" class=\\\"form-control\\\">\\r\\n\\r\\n              <div class=\\\"d-flex justify-content-around\\\">\\r\\n\\r\\n              </div>\\r\\n\\r\\n              <!-- Sign in button -->\\r\\n              <button class=\\\"btn btn-outline-info btn-rounded btn-block my-4 waves-effect z-depth-0\\\" type=\\\"submit\\\">Connexion</button>\\r\\n\\r\\n              <!-- Social login -->\\r\\n              <p>ou connectez-vous avec:</p>\\r\\n              <a type=\\\"button\\\" data-toggle=\\\"tooltip\\\" (click)=\\\"facebookLogin()\\\" data-placement=\\\"right\\\" title=\\\"Connexion avec Facebook\\\" class=\\\"btn-floating btn-fb btn-sm btn-primary text-light\\\">\\r\\n                <i class=\\\"fab fa-facebook-f fa-2x\\\"></i>\\r\\n              </a>\\r\\n              <a type=\\\"button\\\" data-toggle=\\\"tooltip\\\"  (click)=\\\"googleLogin()\\\" data-placement=\\\"right\\\" title=\\\"Connexion avec Google\\\" class=\\\"btn-floating btn-git btn-sm btn-primary text-light\\\">\\r\\n                <i class=\\\"fab fa-google fa-2x\\\"></i>\\r\\n              </a>\\r\\n\\r\\n            </form>\\r\\n            <!-- Form -->\\r\\n\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n\\r\\n\\r\\n  <div class=\\\"modal fade in show \\\" id=\\\"RegisterModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalLabel\\\">\\r\\n    <div class=\\\"modal-dialog \\\" role=\\\"document\\\">\\r\\n      <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"card shadow-lg\\\">\\r\\n\\r\\n          <h5 class=\\\"card-header white-text text-center py-4\\\" style=\\\"background-color:#f0f0f1\\\">\\r\\n            <strong>Inscription</strong>\\r\\n          </h5>\\r\\n\\r\\n          <!--Card content-->\\r\\n          <div class=\\\"card-body px-lg-5 pt-0\\\" style=\\\"margin-top:20px;\\\">\\r\\n\\r\\n            <!-- Form -->\\r\\n            <form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\" register()\\\" class=\\\"text-center\\\" style=\\\"color: #757575;\\\">\\r\\n\\r\\n              <!-- Email -->\\r\\n\\r\\n              <input type=\\\"email\\\" formControlName=\\\"email\\\" id=\\\"materialLoginFormEmailRegister\\\" class=\\\"form-control\\\">\\r\\n              <label for=\\\"materialLoginFormEmailRegister\\\" style=\\\"color:#1a3c69\\\">E-mail&nbsp;<span class=\\\"fas fa-at\\\" id=\\\"basic-addon1\\\" style=\\\"color:#1a3c69\\\"></span></label>\\r\\n\\r\\n              <!-- Password -->\\r\\n              <input type=\\\"text\\\" formControlName=\\\"name\\\" id=\\\"materialLoginFormPasswordRegister\\\" class=\\\"form-control\\\">\\r\\n              <label for=\\\"materialLoginFormPasswordRegister\\\">Nom&nbsp;<span class=\\\"fas fa-key\\\" id=\\\"basic-addon1\\\" style=\\\"color:#1a3c69\\\"></span></label>\\r\\n\\r\\n              <div class=\\\"d-flex justify-content-around\\\">\\r\\n\\r\\n              </div>\\r\\n\\r\\n              <!-- Register button -->\\r\\n              <button class=\\\"btn btn-outline-info btn-rounded btn-block my-4 waves-effect z-depth-0\\\" type=\\\"submit\\\">Inscription</button>\\r\\n\\r\\n\\r\\n              <!-- Social login -->\\r\\n              <p>or register with:</p>\\r\\n              <a type=\\\"button\\\" data-toggle=\\\"tooltip\\\" (click)=\\\"facebookRegister()\\\" data-placement=\\\"right\\\" title=\\\"Inscription avec Facebook\\\" class=\\\"btn-floating btn-fb btn-sm btn-primary text-light\\\">\\r\\n                <i class=\\\"fab fa-facebook-f fa-2x\\\"></i>\\r\\n              </a>\\r\\n              <a type=\\\"button\\\" data-toggle=\\\"tooltip\\\" (click)=\\\"googleRegister()\\\" data-placement=\\\"right\\\" title=\\\"Inscription avec Google\\\" class=\\\"btn-floating btn-git btn-sm btn-primary text-light\\\">\\r\\n                <i class=\\\"fab fa-google fa-2x\\\"></i>\\r\\n              </a>\\r\\n\\r\\n            </form>\\r\\n            <!-- Form -->\\r\\n\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n\\r\\n\\r\\n\\r\\n</header>\\r\\n\"","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-lg-4\\\"></div>\\r\\n  <div class=\\\"col-lg-4 \\\" style=\\\"margin-right:0px; margin-top:2em\\\">\\r\\n\\r\\n    <!-- Material form contact -->\\r\\n    <div class=\\\"card shadow-lg\\\">\\r\\n\\r\\n      <h5 class=\\\"card-header info-color white-text text-center py-4\\\">\\r\\n        <strong>Inscription</strong>\\r\\n      </h5>\\r\\n\\r\\n      <!--Card content-->\\r\\n      <div class=\\\"col-md-2\\\"></div>\\r\\n      <div class=\\\"card-body px-lg-5 pt-0\\\">\\r\\n\\r\\n        <!-- Form -->\\r\\n        <form class=\\\"text-center\\\" style=\\\"color: #757575;\\\">\\r\\n\\r\\n          <!-- Name -->\\r\\n          <div class=\\\"md-form mt-3\\\">\\r\\n            <input type=\\\"text\\\" id=\\\"materialContactFormName\\\" class=\\\"form-control\\\">\\r\\n            <label for=\\\"materialContactFormLastName\\\">Name</label>\\r\\n          </div>\\r\\n          <div class=\\\"md-form mt-3\\\">\\r\\n            <input type=\\\"text\\\" id=\\\"materialContactFormName\\\" class=\\\"form-control\\\">\\r\\n            <label for=\\\"materialContactFormFirstName\\\">Prénom</label>\\r\\n          </div>\\r\\n          <!-- E-mail -->\\r\\n          <div class=\\\"md-form\\\">\\r\\n            <input type=\\\"email\\\" id=\\\"materialContactFormEmail\\\" class=\\\"form-control\\\">\\r\\n            <label for=\\\"materialContactFormEmail\\\">E-mail</label>\\r\\n          </div>\\r\\n          <div class=\\\"md-form mt-3\\\">\\r\\n            <input type=\\\"text\\\" id=\\\"materialContactFormName\\\" class=\\\"form-control\\\">\\r\\n            <label for=\\\"materialContactFormPwd\\\">Mot de passe</label>\\r\\n          </div>\\r\\n          <div class=\\\"md-form mt-3\\\">\\r\\n            <input type=\\\"text\\\" id=\\\"materialContactFormName\\\" class=\\\"form-control\\\">\\r\\n            <label for=\\\"materialContactFormConfirmPwd\\\">Confirmation du mot de passe</label>\\r\\n          </div>\\r\\n          <!--Message-->\\r\\n          <!-- Send button -->\\r\\n          <button class=\\\"btn btn-outline-info btn-rounded btn-block z-depth-0 my-4 waves-effect\\\" type=\\\"submit\\\">Send</button>\\r\\n\\r\\n        </form>\\r\\n\\r\\n        <!-- Form -->\\r\\n\\r\\n      </div>\\r\\n      <div class=\\\"col-md-2\\\"></div>\\r\\n    </div>\\r\\n    <!-- Material form contact -->\\r\\n  </div>\\r\\n  <div class=\\\"col-lg-4\\\"></div>\\r\\n\\r\\n</div>\\r\\n\"","module.exports = \"<p>\\n  trasaction-modal works!\\n</p>\\n\"","module.exports = \"<div class=\\\"container\\\">\\n\\n    <!--Wallet information  part-->\\n    <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n            <h2>Votre wallet</h2>\\n        </div>\\n        <div class=\\\"card-body\\\">\\n            <h4>Nom : {{ wallet.name }}</h4>\\n            <h4>ID : {{ wallet.id }}</h4>\\n            <h4>Supcoins : {{ wallet.amount }}</h4>\\n            <p *ngIf=\\\"wallet.mail != null\\\" class=\\\"lead\\\">Mail : {{ wallet.mail }}</p>\\n        </div>\\n    </div><br>\\n\\n    <!--Wallet create transaction part-->\\n    <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n            <h2>Création d'une transaction</h2>\\n        </div>\\n        <div class=\\\"card-body\\\">\\r\\n          <form>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"inputReceiverId\\\">ID du wallet de destination</label>\\r\\n              <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"inputReceiverId\\\" aria-describedby=\\\"receiverIdHelp\\\" placeholder=\\\"ID du destinataire\\\" [(ngModel)]=\\\"trReceiverId\\\" [ngModelOptions]=\\\"{standalone: true}\\\" required>\\r\\n              <small id=\\\"receiverIdHelp\\\" class=\\\"form-text text-muted\\\">L'ID du wallet cible de cette transaction.</small>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"inputAmount\\\">Montant de la transaction (en SupCoin)</label>\\r\\n              <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"inputAmount\\\" placeholder=\\\"Montant\\\" [(ngModel)]=\\\"trAmount\\\" [ngModelOptions]=\\\"{standalone: true}\\\" required>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"inputMessage\\\">Message a envoyer avec la transaction</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputMessage\\\" aria-describedby=\\\"messageHelp\\\" placeholder=\\\"Message accompagnant la transaction\\\" [(ngModel)]=\\\"trMessage\\\" [ngModelOptions]=\\\"{standalone: true}\\\" required>\\r\\n              <small id=\\\"messageHelp\\\" class=\\\"form-text text-muted\\\">Votre message sera crypté et lisible uniquement par le destinataire.</small>\\r\\n            </div>\\r\\n            <button class=\\\"btn btn-info\\\" (click)=\\\"createTransaction()\\\">Envoyer</button>\\r\\n          </form>\\r\\n          <br/>\\r\\n          <div class=\\\"alert alert-danger\\\" *ngIf=\\\"showAlert == true\\\" role=\\\"alert\\\">\\r\\n            Une erruer est survenue, consultez la console de la blockchain pour plus d'information.\\r\\n          </div>\\r\\n        </div>\\n    </div><br>\\n\\n    <!--Wallet transactions done-->\\n          <div>\\r\\n            <h1>Transactions reçues</h1>\\r\\n            <table id=\\\"receivedTable\\\" class=\\\"table table-striped  table-sm col-lg-12 shadow-lg\\\"\\r\\n                   style=\\\"margin-top:1em; border-radius: 5px 5px;\\\">\\r\\n              <thead style=\\\"background-color:#00285c; border-top-left-radius: 40px 40px;\\\">\\r\\n                <tr>\\r\\n                  <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"border-top: 0px;color:white; padding-bottom:0px\\\">ID</th>\\r\\n                  <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"border-top: 0px;color:white; padding-bottom:0px\\\">Message</th>\\r\\n                  <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"border-top: 0px;color:white; padding-bottom:0px\\\">Montant</th>\\r\\n                  <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"border-top: 0px;color:white; padding-bottom:0px\\\">Id lanceur</th>\\r\\n                  <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"border-top: 0px;color:white; padding-bottom:0px\\\">Minée</th>\\r\\n                  <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"border-top: 0px;color:white; padding-bottom:0px\\\">Timestamp</th>\\r\\n                  <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"border-top: 0px;color:white; padding-bottom:0px\\\">Action</th>\\r\\n                </tr>\\r\\n              </thead>\\r\\n              <tbody>\\r\\n                <tr *ngFor=\\\"let t of receivedTransactions | paginate: { itemsPerPage: 10, currentPage: p }\\\">\\r\\n                  <th class=\\\"text-center\\\" scope=\\\"row\\\">{{t.id}}</th>\\r\\n                  <td class=\\\"text-center\\\">{{t.message.substring(0, 20)}}...</td>\\r\\n                  <th class=\\\"text-center\\\" scope=\\\"row\\\">{{t.amount}}</th>\\r\\n                  <td class=\\\"text-center\\\">{{t.senderId}}</td>\\r\\n                  <td class=\\\"text-center\\\">{{t.mined}}</td>\\r\\n                  <td class=\\\"text-center\\\">{{t.timestamp}}</td>\\r\\n                  <td class=\\\"text-center\\\"><button class=\\\"btn btn-info\\\" (click)=\\\"decryptTransaction(t.id,t.amount, t.senderId, t.mined, t.timestamp)\\\" data-toggle=\\\"modal\\\" data-target=\\\"#transactionModal\\\">Lire</button></td>\\r\\n                </tr>\\r\\n              </tbody>\\r\\n              <ul class=\\\"pagination\\\">\\r\\n                <pagination-controls (pageChange)=\\\"p = $event\\\"></pagination-controls>\\r\\n              </ul>\\r\\n            </table>\\r\\n            <h1>Transactions envoyées</h1>\\r\\n            <table id=\\\"sendedTable\\\" class=\\\"table table-striped  table-sm col-lg-12 shadow-lg\\\"\\r\\n                   style=\\\"margin-top:1em; border-radius: 5px 5px;\\\">\\r\\n              <thead style=\\\"background-color:#00285c; border-top-left-radius: 40px 40px;\\\">\\r\\n                <tr>\\r\\n                  <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"border-top: 0px;color:white; padding-bottom:0px\\\">ID</th>\\r\\n                  <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"border-top: 0px;color:white; padding-bottom:0px\\\">Message</th>\\r\\n                  <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"border-top: 0px;color:white; padding-bottom:0px\\\">Montant</th>\\r\\n                  <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"border-top: 0px;color:white; padding-bottom:0px\\\">Id receveur</th>\\r\\n                  <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"border-top: 0px;color:white; padding-bottom:0px\\\">Minée</th>\\r\\n                  <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"border-top: 0px;color:white; padding-bottom:0px\\\">Timestamp</th>\\r\\n                </tr>\\r\\n              </thead>\\r\\n              <tbody>\\r\\n                <tr *ngFor=\\\"let t of sendedTransactions | paginate: { itemsPerPage: 10, currentPage: p }\\\">\\r\\n                  <th class=\\\"text-center\\\" scope=\\\"row\\\">{{t.id}}</th>\\r\\n                  <td class=\\\"text-center\\\">{{t.message.substring(0, 20)}}...</td>\\r\\n                  <th class=\\\"text-center\\\" scope=\\\"row\\\">{{t.amount}}</th>\\r\\n                  <td class=\\\"text-center\\\">{{t.receiverId}}</td>\\r\\n                  <td class=\\\"text-center\\\">{{t.mined}}</td>\\r\\n                  <td class=\\\"text-center\\\">{{t.timestamp}}</td>\\r\\n                </tr>\\r\\n              </tbody>\\r\\n              <ul class=\\\"pagination\\\">\\r\\n                <pagination-controls (pageChange)=\\\"p = $event\\\"></pagination-controls>\\r\\n              </ul>\\r\\n            </table>           \\r\\n          </div>\\n</div>\\n\\n<div class=\\\"modal fade\\\" id=\\\"transactionModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalLabel\\\" aria-hidden=\\\"true\\\">\\r\\n  <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\">Modal title</h5>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        ...\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\">Save changes</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\n\\n\\n\\n\"","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","export class User {\r\n  name: string;\r\n  mail: string;\r\n  token: string;\r\n}\r\n","export class transactionViewModel {\r\n  receiver: number;\r\n  amount: number;\r\n  message: string;\r\n}\r\n","module.exports = \"@media (max-width: 767px) {\\r\\n  /* On small screens, the nav menu spans the full width of the screen. Leave a space for it. */\\r\\n  .body-content {\\r\\n    padding-top: 50px;\\r\\n  }\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSw2RkFBNkY7RUFDN0Y7SUFDRSxpQkFBaUI7RUFDbkI7QUFDRiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQG1lZGlhIChtYXgtd2lkdGg6IDc2N3B4KSB7XHJcbiAgLyogT24gc21hbGwgc2NyZWVucywgdGhlIG5hdiBtZW51IHNwYW5zIHRoZSBmdWxsIHdpZHRoIG9mIHRoZSBzY3JlZW4uIExlYXZlIGEgc3BhY2UgZm9yIGl0LiAqL1xyXG4gIC5ib2R5LWNvbnRlbnQge1xyXG4gICAgcGFkZGluZy10b3A6IDUwcHg7XHJcbiAgfVxyXG59XHJcbiJdfQ== */\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  showSearchBar = true;\r\n  title = 'app';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { RouterModule } from '@angular/router';\r\nimport { AppComponent } from './app.component';\r\nimport { NavMenuComponent } from './nav-menu/nav-menu.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { FetchDataComponent } from './fetch-data/fetch-data.component';\r\nimport { SubscribeComponent } from './subscribe/subscribe.component';\r\nimport { SocialLoginModule, AuthServiceConfig } from 'angular5-social-login';\r\nimport { FacebookLoginProvider } from 'angular5-social-login';\r\nimport { getAuthServiceConfigs } from './socialloginConfig';\r\nimport { WalletService } from './services/WalletService';\r\nimport { NodeService } from './services/NodeService';\r\nimport { TransactionService } from './services/TransactionService';\r\nimport { BlockService } from './services/BlockService';\r\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { WalletComponent } from './wallet/wallet.component';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { NgbModule, NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { TrasactionModalComponent } from './trasaction-modal/trasaction-modal.component';\r\nimport { BlockModalComponent } from './block-modal/block-modal.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n\r\n    AppComponent,\r\n    NavMenuComponent,\r\n    HomeComponent,\r\n    FetchDataComponent,\r\n    SubscribeComponent,\r\n    WalletComponent,\r\n    TrasactionModalComponent,\r\n    BlockModalComponent\r\n  ],\r\n  entryComponents: [TrasactionModalComponent, BlockModalComponent],\r\n  imports: [\r\n    NgbModule.forRoot(),\r\n    SocialLoginModule,\r\n    BrowserModule.withServerTransition({ appId: 'ng-cli-universal' }),\r\n    Ng2SearchPipeModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n     NgxPaginationModule, Ng2SearchPipeModule,\r\n    FormsModule,\r\n    RouterModule.forRoot([\r\n      { path: '', component: HomeComponent, pathMatch: 'full' },\r\n      { path: 'fetch-data', component: FetchDataComponent },\r\n      { path: 'subscribe', component: SubscribeComponent },\r\n      { path: 'wallet', component: WalletComponent }\r\n    ])\r\n  ],\r\n  exports: [TrasactionModalComponent, BlockModalComponent],\r\n  providers: [\r\n    NgbActiveModal,\r\n    WalletService,\r\n    NodeService,\r\n    TransactionService,\r\n    BlockService,\r\n    {\r\n      provide: AuthServiceConfig, useFactory: getAuthServiceConfigs,\r\n    },\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n\r\n  constructor() {\r\n    localStorage.setItem('baseUrl', \"\");\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Jsb2NrLW1vZGFsL2Jsb2NrLW1vZGFsLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Transaction } from '../Model/Transaction'\n@Component({\n  selector: 'app-block-modal',\n  templateUrl: './block-modal.component.html',\n  styleUrls: ['./block-modal.component.css'],\n  template: `\r\n    <div class=\"modal-header\">\r\n      <h2 class=\"modal-title\">Détail du bloc.</h2>\r\n    \r\n    </div>\r\n    <div class=\"modal-body\">\r\n      <div>\r\n        <h5>Identifiant: {{id}}</h5>\r\n      <h5>Hash: {{hash}}</h5>\r\n      <h5>Hash précédent: {{prevHash}}</h5>\r\n      <h5>Nonce: {{nonce}}</h5>\r\n      <h5>Timestamp: {{timestamp}}</h5>\r\n      <h5>Transactions:</h5>\r\n\r\n      <table id=\"table\" class=\"table table-striped table-responsive table-sm col-lg-12\" style=\"margin-top:0px; border-radius: 5px 5px;\">\r\n        <thead style=\"background-color:#00285c; border-top-left-radius: 40px 40px;\">\r\n          <tr>\r\n            <th class=\"text-center\" scope=\"col\" style=\"border-top: 0px;color:white; padding-bottom:0px; max-width:3em;\">Id</th>\r\n            <th class=\"text-center\" scope=\"col\" style=\"border-top: 0px;color:white; padding-bottom:0px\">Minée</th>\r\n            <th class=\"text-center\" scope=\"col\" style=\"border-top: 0px;color:white; padding-bottom:0px\">Message</th>\r\n            <th class=\"text-center\" scope=\"col\" style=\"border-top: 0px;color:white; padding-bottom:0px\">Id receveur</th>\r\n            <th class=\"text-center\" scope=\"col\" style=\"border-top: 0px;color:white; padding-bottom:0px\">Id lanceur</th>\r\n            <th class=\"text-center\" scope=\"col\" style=\"border-top: 0px;color:white; padding-bottom:0px\">Timestamp</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr *ngFor=\"let t of transactions | paginate: { itemsPerPage: 10, currentPage: p }\">\r\n            <th class=\"text-center\" scope=\"row\">{{t.id}}</th>\r\n            <td class=\"text-center\">{{t.mined}}</td>\r\n            <td class=\"text-center\">{{t.message.substring(0,40)}}...</td>\r\n            <td class=\"text-center\">{{t.receiverId}}</td>\r\n            <td class=\"text-center\">{{t.senderId}}</td>\r\n            <td class=\"text-center\">{{t.timestamp}}</td>\r\n          </tr>\r\n        </tbody>\r\n        <tfoot>\r\n          <ul class=\"pagination col-lg-12\">\r\n            <pagination-controls (pageChange)=\"p = $event\"></pagination-controls>\r\n          </ul>\r\n        </tfoot>\r\n      </table>\r\n\r\n      </div>      \r\n    </div>\r\n  `\n})\nexport class BlockModalComponent implements OnInit { \n  id: string = localStorage.getItem('id');\n  hash: string = localStorage.getItem('hash');\n  prevHash: string = localStorage.getItem('prevHash');\n  nonce: string = localStorage.getItem('nonce');\n  transactions: Transaction[] = JSON.parse(localStorage.getItem('transactions'));\n  timestamp: string = localStorage.getItem('timestamp');\n  constructor(/*id: number, message: string, amount: number, sender: number, mined: boolean, timestamp: string*/) {\n    //this.id = id;\n    //this.message = message;\n    //this.amount = amount;\n    //this.sender = sender;\n    //this.mined = mined;\n    //this.timestamp = timestamp;\n  }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-fetch-data',\r\n  templateUrl: './fetch-data.component.html'\r\n})\r\nexport class FetchDataComponent {\r\n  public forecasts: WeatherForecast[];\r\n\r\n  constructor(http: HttpClient, @Inject('BASE_URL') baseUrl: string) {\r\n    http.get<WeatherForecast[]>(baseUrl + 'api/SampleData/WeatherForecasts').subscribe(result => {\r\n      this.forecasts = result;\r\n    }, error => console.error(error));\r\n  }\r\n}\r\n\r\ninterface WeatherForecast {\r\n  dateFormatted: string;\r\n  temperatureC: number;\r\n  temperatureF: number;\r\n  summary: string;\r\n}\r\n","\r\n\r\nimport { Component, OnInit, ViewChild, HostListener, AfterViewInit, ChangeDetectorRef } from '@angular/core';\r\nimport { from } from 'rxjs';\r\nimport { TransactionService } from '../services/TransactionService';\r\nimport { Transaction } from '../Model/Transaction';\r\nimport { Block } from '../Model/Block';\r\nimport { BlockService } from '../services/BlockService';\r\nimport { NodeService } from '../services/NodeService';\r\nimport { WalletService } from '../services/WalletService';\r\nimport { NgbActiveModal, NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { BlockModalComponent } from '../block-modal/block-modal.component';\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html'\r\n})\r\n\r\n\r\nexport class HomeComponent {\r\n  private tableInfo: Transaction[] = [];\r\n  public col: string[];\r\n  public showTransaction: boolean = true;\r\n  public showBlock: boolean = false;\r\n  public showNode: boolean = false;\r\n  public showWallet: boolean = false;\r\n  public totalTransaction: number;\r\n  public totalTransactionMined: number;\r\n  public totalUsers: number;\r\n  public totalBlocks: number;\r\n  public totalTransactionUnMined: number;\r\n  constructor(private transactionService: TransactionService, private blockService: BlockService,\r\n    private nodeService: NodeService, private walletService: WalletService,\r\n    public activeModal: NgbActiveModal, private modalService: NgbModal) {\r\n\r\n  }\r\n  ngOnInit() {\r\n    this.totalBlocks = 0;\r\n    this.totalTransactionMined = 0;\r\n    this.totalTransaction = 0;\r\n    this.totalTransactionUnMined = 0;\r\n    this.totalUsers = 0;\r\n    this.transactionService.getTransactions().subscribe((res: Transaction[]) => {\r\n      res.forEach(t => {\r\n        this.totalTransaction += 1\r\n        if (t.mined == true) {\r\n          this.totalTransactionMined += 1;\r\n        } else {\r\n          this.totalTransactionUnMined += 1;\r\n        }\r\n        this.tableInfo = res;\r\n      });\r\n\r\n    });\r\n    this.blockService.getBlock().subscribe((res: any[]) => {\r\n      res.forEach(b => { this.totalBlocks += 1 });\r\n    });\r\n    this.walletService.walletCount().subscribe((res: any[]) => {\r\n      res.forEach(w => { this.totalUsers += 1 });\r\n    });\r\n\r\n  }\r\n\r\n  public getTransactions() {\r\n    \r\n    this.transactionService.getTransactions().subscribe((res: Transaction[]) => {\r\n      console.log(res);\r\n      this.tableInfo = res;\r\n      this.showTransaction = true;\r\n      this.showBlock = false;\r\n      this.showNode = false;\r\n      this.showWallet = false;\r\n    });\r\n  }\r\n  public getBlocks() {\r\n    this.showTransaction = false;\r\n    this.showBlock = true;\r\n    this.showNode = false;\r\n    this.showWallet = false;\r\n    this.blockService.getBlock().subscribe((res: any[]) => {\r\n       console.log(res);\r\n      this.tableInfo = res;     \r\n     });\r\n  }\r\n    \r\n  public getNodes() {\r\n    this.nodeService.getNode().subscribe((res: any[]) => {\r\n      console.log(res);\r\n      this.tableInfo = res;\r\n      this.showTransaction = false;\r\n      this.showBlock = false;\r\n      this.showNode = true;\r\n      this.showWallet = false;\r\n    });\r\n  }\r\n\r\n  public getWallets() {\r\n    this.walletService.walletCount().subscribe((res: any[]) => {\r\n      console.log(res);\r\n      this.tableInfo = res;\r\n      this.showTransaction = false;\r\n      this.showBlock = false;\r\n      this.showNode = false;\r\n      this.showWallet = true;\r\n    });\r\n  }\r\n\r\n  public blockDetail(id: number) {\r\n    this.blockService.getBlockDetail(id).subscribe((block: Block) => {\r\n      localStorage.setItem('id', block.id.toString());\n      localStorage.setItem('hash', block.hash);\n      localStorage.setItem('prevHash', block.prevHash);\r\n      localStorage.setItem('nonce', block.nonce.toString());\r\n      localStorage.setItem('timestamp', block.timestamp);\r\n      localStorage.setItem('transactions', JSON.stringify(block.transactions));      \r\n      const modalRef = this.modalService.open(BlockModalComponent, { size: 'lg' });\r\n      modalRef.componentInstance.name = 'transaction';\r\n    });\r\n\r\n  }\r\n\r\n}\r\n","module.exports = \"a.navbar-brand {\\r\\n  white-space: normal;\\r\\n  text-align: center;\\r\\n  word-break: break-all;\\r\\n}\\r\\n\\r\\nhtml {\\r\\n  font-size: 14px;\\r\\n}\\r\\n\\r\\n@media (min-width: 768px) {\\r\\n  html {\\r\\n    font-size: 16px;\\r\\n  }\\r\\n}\\r\\n\\r\\n.box-shadow {\\r\\n  box-shadow: 0 .25rem .75rem rgba(0, 0, 0, .05);\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbmF2LW1lbnUvbmF2LW1lbnUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLG1CQUFtQjtFQUNuQixrQkFBa0I7RUFDbEIscUJBQXFCO0FBQ3ZCOztBQUVBO0VBQ0UsZUFBZTtBQUNqQjs7QUFDQTtFQUNFO0lBQ0UsZUFBZTtFQUNqQjtBQUNGOztBQUVBO0VBQ0UsOENBQThDO0FBQ2hEIiwiZmlsZSI6InNyYy9hcHAvbmF2LW1lbnUvbmF2LW1lbnUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImEubmF2YmFyLWJyYW5kIHtcclxuICB3aGl0ZS1zcGFjZTogbm9ybWFsO1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICB3b3JkLWJyZWFrOiBicmVhay1hbGw7XHJcbn1cclxuXHJcbmh0bWwge1xyXG4gIGZvbnQtc2l6ZTogMTRweDtcclxufVxyXG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcclxuICBodG1sIHtcclxuICAgIGZvbnQtc2l6ZTogMTZweDtcclxuICB9XHJcbn1cclxuXHJcbi5ib3gtc2hhZG93IHtcclxuICBib3gtc2hhZG93OiAwIC4yNXJlbSAuNzVyZW0gcmdiYSgwLCAwLCAwLCAuMDUpO1xyXG59XHJcbiJdfQ== */\"","\r\nimport { Component } from '@angular/core';\r\nimport { Router } from \"@angular/router\";\r\nimport { Transaction } from '../Model/Transaction';\r\nimport { AuthenticationService } from '../services/authentication.service';\r\nimport { TransactionService } from '../services/TransactionService';\r\nimport { Wallet } from \"../Model/Wallet\";\r\nimport { FormControl, FormGroup } from '@angular/forms'\r\n@Component({\r\n  selector: 'app-nav-menu',\r\n  templateUrl: './nav-menu.component.html',\r\n  styleUrls: ['./nav-menu.component.css']\r\n})\r\nexport class NavMenuComponent {\r\n  isExpanded = false;\r\n  showSearchBar: boolean = true;\r\n  isLogged: boolean;\r\n  searchText = '';\r\n  showSearchResult: boolean = false;\r\n  tableInfo = [];\r\n  private wallet: Wallet;\r\n  private contactForm: FormGroup;\r\n  private registerForm: FormGroup;\r\n  constructor(private router: Router, private transactionService: TransactionService, private authService: AuthenticationService) {\r\n    this.contactForm = this.createFormGroup()\r\n    this.registerForm = this.createFormGroup()\r\n  }\r\n\r\n  public search(searchString: string) {\r\n    this.transactionService.search(searchString).subscribe((res: Transaction[]) => {    \r\n      this.tableInfo = res;\r\n      console.log(res);\r\n      this.showSearchResult = true;\r\n    });\r\n  }\r\n  ngOnInit() {  \r\n    this.wallet = JSON.parse(localStorage.getItem('currentUser'));\r\n    if (this.wallet == null || this.wallet == undefined) {\r\n      this.isLogged = false;\r\n    }\r\n    else {\r\n      this.isLogged = true;\r\n    }\r\n  }\r\n\r\n  createFormGroup() {\r\n    return new FormGroup({      \r\n      name: new FormControl(),\r\n      email: new FormControl(),\r\n    })\r\n  }\r\n\r\n  home() {\r\n    this.router.navigate(['/'])\r\n  }\r\n\r\n  public facebookLogin() {\r\n    this.authService.facebookLogin();\r\n    this.router.navigate(['/wallet']);\r\n    \r\n  }\r\n\r\n  public facebookRegister() {\r\n    this.authService.facebookRegister();\r\n    this.router.navigate(['/wallet']);\r\n    \r\n  }\r\n\r\n  public googleLogin() {\r\n    this.authService.googleLogin();\r\n    this.router.navigate(['/wallet']);\r\n   \r\n  }\r\n\r\n  public googleRegister() {\r\n    this.authService.googleRegister();\r\n    this.router.navigate(['/wallet']);\r\n    \r\n  }\r\n\r\n  public logOut() {\r\n    this.authService.logout();\r\n    this.ngOnInit();\r\n  }\r\n\r\n  public logIn() {\r\n    console.log(this.contactForm.value[\"name\"]);\r\n    this.authService.login(this.contactForm.value[\"email\"], this.contactForm.value[\"name\"]);\r\n    \r\n\r\n    // Do useful stuff with the gathered data\r\n\r\n  }\r\n\r\n  public register() {\r\n    console.log(this.registerForm.value[\"name\"]);\r\n    this.authService.register(this.registerForm.value[\"email\"], this.registerForm.value[\"name\"]);\r\n   \r\n    // Do useful stuff with the gathered data\r\n  }\r\n\r\n  collapse() {\r\n    this.isExpanded = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.isExpanded = !this.isExpanded;\r\n  }\r\n\r\n\r\n}\r\n","import { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Component } from '@angular/core';\r\n@Injectable()\r\nexport class BlockService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n  baseUrl: string = localStorage.getItem('baseUrl');\r\n  public getBlock() {\r\n    let header = new HttpHeaders().set(\"Access-Control-Allow-Origin\", \"*\")\r\n    return this.http.post(this.baseUrl + \"/blockchain/blocks\", header);\r\n  }\r\n\r\n  public getBlockDetail(id: number) {\r\n    let params = new HttpParams().set(\"id\", id.toString())\r\n    return this.http.post(this.baseUrl + \"/blockchain/block?id=\"+id,null);\r\n  }\r\n\r\n\r\n}\r\n","import { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Component } from '@angular/core';\r\n@Injectable()\r\nexport class NodeService {\r\n  constructor(private http: HttpClient) { }\r\n  baseUrl: string = localStorage.getItem('baseUrl');\r\n  public getNode() {\r\n    let header = new HttpHeaders().set(\"Access-Control-Allow-Origin\", \"*\")\r\n    return this.http.get(this.baseUrl + \"/network/nodes\", { headers: header });\r\n  }\r\n}\r\n","import { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Component } from '@angular/core';\r\nimport { transactionViewModel} from '../Model/transactionViewModel'\r\n@Injectable()\r\nexport class TransactionService {\r\n  constructor(private http: HttpClient) { }\r\n  baseUrl: string = localStorage.getItem('baseUrl');\r\n  t: transactionViewModel;\r\n  public getTransactions() {\r\n    let header = new HttpHeaders().set(\"Access-Control-Allow-Origin\", \"*\")\r\n    return this.http.post(this.baseUrl+\"/blockchain/transactions\", header)\r\n  }\r\n  public getTransactionPool() {\r\n    let header = new HttpHeaders().set(\"Access-Control-Allow-Origin\", \"*\")\r\n    return this.http.post(this.baseUrl+\"/blockchain/pool\", null).subscribe({\r\n      next(response) { console.log(response); },\r\n\r\n    });\r\n  }\r\n  public search(searchString: string) {\r\n    let params = new HttpParams().set(\"criteria\", searchString)\r\n    return this.http.get(this.baseUrl + \"/blockchain/search\", { params: params });\r\n  }\r\n\r\n  public sendTransaction(receiverId: number, amount: number, message: string) {\r\n    this.t = new transactionViewModel;\r\n    this.t.amount = amount;\r\n    this.t.receiver = receiverId;\r\n    this.t.message = message;\r\n    return this.http.post(this.baseUrl + \"/wallet/publish\", this.t);\r\n  }\r\n\r\n  public decryptTransaction(id: number) {\r\n    let params = new HttpParams()\r\n      .set(\"id\", id.toString());\r\n    return this.http.get(this.baseUrl + \"/wallet/decrypt\", { params: params, responseType: 'text' });\r\n  }\r\n}\r\n","\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Component } from '@angular/core';\r\nimport { User } from '../Model/User';\r\n@Injectable()\r\nexport class WalletService {\r\n  baseUrl: string = localStorage.getItem('baseUrl');\r\n  constructor(private http: HttpClient) { }\r\n\r\n  public createWallet(name: string, mail: string, token: string) {\r\n    let user: User = new User();\r\n    user.name = name;\r\n    user.mail = mail;\r\n    user.token = token;\r\n    //let params = new HttpParams().set(\"name\", name).set(\"mail\", mail).set(\"token\", token)\r\n    return this.http.post<any>(this.baseUrl + \"/wallet/create\", user);\r\n  }\r\n  public walletLoad(identifier: string) {\r\n    let params = new HttpParams().set(\"identifier\", identifier);\r\n    return this.http.get(this.baseUrl + \"/wallet/load\", {params: params});\r\n  }\r\n  public walletStatus() {\r\n    return this.http.get(this.baseUrl +\"/wallet/status\");\r\n  }\r\n  public walletCount() {\r\n    return this.http.post(this.baseUrl + \"/blockchain/wallets\",null);\r\n  }\r\n  public walletTransaction() {\r\n    return this.http.get(this.baseUrl + \"/wallet/transactions\")\r\n  }\r\n  public walletDecrypt(id: number) {\r\n    return this.http.post(this.baseUrl + \"/wallet/decrypt\", id);\r\n  }\r\n\r\n}\r\n","﻿\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { Router } from \"@angular/router\";\r\nimport { WalletService } from './/WalletService';\r\nimport { map } from 'rxjs/operators';\r\nimport {\r\n  AuthService,\r\n  FacebookLoginProvider,\r\n  GoogleLoginProvider\r\n} from 'angular5-social-login';\r\nimport { Wallet } from '../Model/Wallet';\r\nimport { walletViewModel } from '../Model/walletViewModel';\r\n\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthenticationService {\r\n  private currentUserSubject: BehaviorSubject<Wallet>;\r\n  public currentUser: Observable<Wallet>;\r\n\r\n  constructor(private http: HttpClient, private socialAuthService: AuthService, private walletService: WalletService, private route: Router) {\r\n    this.currentUserSubject = new BehaviorSubject<Wallet>(JSON.parse(localStorage.getItem('currentUser')));\r\n    this.currentUser = this.currentUserSubject.asObservable();\r\n  }\r\n\r\n  public facebookLogin() {\r\n    let socialPlatformProvider = FacebookLoginProvider.PROVIDER_ID;\r\n    this.socialAuthService.signIn(socialPlatformProvider).then(\r\n      (userData) => {\r\n        this.walletService.walletLoad(userData.email).subscribe((wallet: Wallet) => {\r\n          console.log(wallet.token);\r\n          localStorage.setItem('currentUser', JSON.stringify(wallet));\r\n          window.location.reload(true);\r\n        });\r\n\r\n      }\r\n    );\r\n  }\r\n\r\n  public facebookRegister() {\r\n    let socialPlatformProvider = FacebookLoginProvider.PROVIDER_ID;\r\n    this.socialAuthService.signIn(socialPlatformProvider).then(\r\n      (userData) => {\r\n        console.log(\"facebook\" + userData.token)\r\n        this.walletService.createWallet(userData.name, userData.email, userData.token).subscribe((wallet: Wallet) => {\r\n          console.log(wallet.token);\r\n          localStorage.setItem('currentUser', JSON.stringify(wallet));\r\n          window.location.reload(true);\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  public googleLogin() {\r\n    let socialPlatformProvider = GoogleLoginProvider.PROVIDER_ID;\r\n    this.socialAuthService.signIn(socialPlatformProvider).then(\r\n      (userData) => {\r\n        this.walletService.walletLoad(userData.email).subscribe((wallet: Wallet) => {\r\n          console.log(wallet.token);\r\n          localStorage.setItem('currentUser', JSON.stringify(wallet));\r\n          window.location.reload(true);\r\n        });\r\n        //this will return user data from facebook. What you need is a user token which you will send it to the server\r\n        console.log(userData.name)\r\n      }\r\n    );\r\n  }\r\n\r\n  public googleRegister() {\r\n    let socialPlatformProvider = GoogleLoginProvider.PROVIDER_ID;\r\n    this.socialAuthService.signIn(socialPlatformProvider).then(\r\n      (userData) => {\r\n        console.log(\"google\" + userData.token)\r\n        this.walletService.createWallet(userData.name, userData.email, userData.token).subscribe((wallet: Wallet) => {\r\n          console.log(wallet.token);\r\n          localStorage.setItem('currentUser', JSON.stringify(wallet));\r\n          window.location.reload(true);\r\n        });\r\n        console.log(userData.name)\r\n      }\r\n    );\r\n  }\r\n\r\n  login(mail?: string, name?: string) {\r\n    if (mail != null || mail != undefined) {\r\n      this.walletService.walletLoad(mail).subscribe((wallet: Wallet) => {\r\n        console.log(wallet.token);\r\n        localStorage.setItem('currentUser', JSON.stringify(wallet));\r\n        window.location.reload(true);\r\n      });\r\n    } else {\r\n      this.walletService.walletLoad(name).subscribe((wallet: Wallet) => {\r\n        console.log(wallet.token);\r\n        localStorage.setItem('currentUser', JSON.stringify(wallet));\r\n        window.location.reload(true);\r\n      });\r\n    }\r\n\r\n  }\r\n  register(mail: string, name: string) {\r\n    this.walletService.createWallet(name, mail, null).subscribe((wallet: Wallet) => {\r\n      localStorage.setItem('currentUser', JSON.stringify(wallet));\r\n      window.location.reload(true);\r\n    });\r\n  }\r\n\r\n  logout() {\r\n    // remove user from local storage to log user out\r\n    localStorage.removeItem('currentUser');\r\n    this.route.navigate(['/']);\r\n  }\r\n}\r\n","import {\r\n  AuthServiceConfig,\r\n  FacebookLoginProvider,\r\r\n  GoogleLoginProvider\n} from 'angular5-social-login';\r\n\r\nexport function getAuthServiceConfigs() {\r\n  let config = new AuthServiceConfig([\r\n    {\r\n      id: FacebookLoginProvider.PROVIDER_ID,\r\n      provider: new FacebookLoginProvider('2347129585338818')\r\n    },\r\n    {\r\n      id: GoogleLoginProvider.PROVIDER_ID,\r\n      provider: new GoogleLoginProvider(\"414552174408-l9mugfpl6e0umejsf1gagdk809dddg95.apps.googleusercontent.com\")\r\n    }\r\n  ]);\r\n  return config;\r\n}\r\n\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N1YnNjcmliZS9zdWJzY3JpYmUuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-subscribe',\r\n  templateUrl: './subscribe.component.html',\r\n  styleUrls: ['./subscribe.component.css']\r\n})\r\nexport class SubscribeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n  showSearchBar: boolean;\r\n  ngOnInit() {\r\n    this.showSearchBar = false;\r\n  }\r\n\r\n}\r\n","module.exports = \"thead {\\r\\n  float: left;\\r\\n}\\r\\n\\r\\n  thead th {\\r\\n    display: block;\\r\\n  }\\r\\n\\r\\n  tbody {\\r\\n  float: right;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdHJhc2FjdGlvbi1tb2RhbC90cmFzYWN0aW9uLW1vZGFsLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXO0FBQ2I7O0VBRUU7SUFDRSxjQUFjO0VBQ2hCOztFQUVGO0VBQ0UsWUFBWTtBQUNkIiwiZmlsZSI6InNyYy9hcHAvdHJhc2FjdGlvbi1tb2RhbC90cmFzYWN0aW9uLW1vZGFsLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0aGVhZCB7XHJcbiAgZmxvYXQ6IGxlZnQ7XHJcbn1cclxuXHJcbiAgdGhlYWQgdGgge1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgfVxyXG5cclxudGJvZHkge1xyXG4gIGZsb2F0OiByaWdodDtcclxufVxyXG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-trasaction-modal',\n  templateUrl: './trasaction-modal.component.html',\n  styleUrls: ['./trasaction-modal.component.css'],\n  template: `\r\n    <div class=\"modal-header\">\r\n      <h2 class=\"modal-title\">déchiffrement  transaction</h2>\r\n    \r\n    </div>\r\n    <div class=\"modal-body\">\r\n      <h5>Identifiant: {{id}}</h5>\r\n      <h5>Montant: {{amount}}</h5>\r\n      <h5>Lanceur: {{sender}}</h5>\r\n      <h5>Minée: {{mined}}</h5>\r\n      <h5>Timestamp: {{timestamp}}</h5>\r\n      <h5>Message: {{message}}</h5>\r\n    </div>\r\n  `\n})\nexport class TrasactionModalComponent implements OnInit {\n  id: string = localStorage.getItem('id');\n  message: string = localStorage.getItem('message');\n  amount: string = localStorage.getItem('amount');\n  sender: string = localStorage.getItem('sender');\n  mined: string = localStorage.getItem('mined');\n  timestamp: string = localStorage.getItem('timestamp');\n  constructor(/*id: number, message: string, amount: number, sender: number, mined: boolean, timestamp: string*/) {\n    //this.id = id;\n    //this.message = message;\n    //this.amount = amount;\n    //this.sender = sender;\n    //this.mined = mined;\n    //this.timestamp = timestamp;\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3dhbGxldC93YWxsZXQuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport {WalletService} from \"../services/WalletService\";\nimport {Wallet} from \"../Model/Wallet\";\nimport {Transaction} from \"../Model/Transaction\";\nimport {TransactionService} from \"../services/TransactionService\";\nimport { Router } from \"@angular/router\";\nimport { NgbActiveModal, NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { TrasactionModalComponent } from '../trasaction-modal/trasaction-modal.component';\n\n@Component({\n  selector: 'app-wallet',\n  templateUrl: './wallet.component.html',\n  styleUrls: ['./wallet.component.css'],\n \n})\nexport class WalletComponent implements OnInit {\n\n  private dataLoaded: Promise<Boolean>;\n  private wallet: Wallet;\n  private sendedTransactions: Array<Transaction> = [];\n  private receivedTransactions: Array<Transaction> = [];\n\n  private trReceiverId: number;\n  private trAmount: number;\n  private trMessage: string;\n  private message: string = \"yo\";\n\n  showAlert: boolean;\n\n  constructor(private walletService: WalletService,\n    private transactionService: TransactionService, private router: Router, public activeModal: NgbActiveModal, private modalService: NgbModal) { }\n\n  ngOnInit() {\n    // Fetch the loaded wallet on the blockchain\n    this.wallet = JSON.parse(localStorage.getItem('currentUser'));\n    if (this.wallet == null || this.wallet == undefined) {\n      this.router.navigate(['/'])\r\n    }\n    else {\n      this.loadTransactions();\r\n    }\n  }\n\n   //Fetch the transaction associated to the wallet\n  private loadTransactions() {\n    this.walletService.walletTransaction()\n      .subscribe((transactions: Transaction[]) => {\n        // Add all the transactions retreived\n        transactions.forEach((transaction: Transaction) => {\n          // Sort the transaction (received or sended)\n\n          if(transaction.receiverId == this.wallet.id) {\n            this.receivedTransactions.push(transaction)\n          } else {\n            this.sendedTransactions.push(transaction)\n          }\n        });\n      }, (error) => {\n        // When receive an error\n        console.log(\"Error\");\n        this.dataLoaded = Promise.resolve(false)\n      }, () => {\n        // At the end of the load\n        this.dataLoaded = Promise.resolve(true)\n      })\n  }\n\n  public createTransaction() {\n    console.log(this.trReceiverId, this.trAmount, this.trMessage);\n    this.transactionService.sendTransaction(this.trReceiverId, this.trAmount, this.trMessage) \n      .subscribe((result: Transaction) => {\n       \n        if (result == null) {\n          this.showAlert = true;\n        }\n        else {\n          window.location.reload(true)\r\n        }\n      });\n     \n  }\n\n  private decryptTransaction(id: number, amount: number, sId: number, mined: boolean,timestamp:string) {\n\n    localStorage.setItem('id', id.toString());\n    localStorage.setItem('amount', amount.toString());    \n    localStorage.setItem('sender', sId.toString());\n    if (mined == true) {\n      localStorage.setItem('mined', 'true');\r\n    } else {\n      localStorage.setItem('mined','false');\r\n    }\n    localStorage.setItem('timestamp', timestamp);\n    this.transactionService.decryptTransaction(id).subscribe((result: string) => {\r\n      localStorage.setItem('message', result);\r\n      const modalRef = this.modalService.open(TrasactionModalComponent, { size: 'lg', backdrop: 'static' });\r\n      modalRef.componentInstance.name = 'transaction';\r\n    });\r\n\r\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nexport function getBaseUrl() {\r\n  return document.getElementsByTagName('base')[0].href;\r\n}\r\n\r\nconst providers = [\r\n  { provide: 'BASE_URL', useFactory: getBaseUrl, deps: [] }\r\n];\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic(providers).bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}